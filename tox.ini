[tox]
min_version = 4.22
env_list = format,lint,type,py,docs

[testenv]
passenv =
    CI
    GITHUB_*
    COVERALLS_*
    PY_COLORS
    TEST_SOCKETCAN
dependency_groups =
    test
deps =
    asammdf>=6.0; platform_python_implementation=="CPython" and python_version<"3.14"
    msgpack~=1.1.0; python_version<"3.14"
    pywin32>=305; platform_system=="Windows" and platform_python_implementation=="CPython" and python_version<"3.14"
commands =
    pytest {posargs}
extras =
    canalystii

[testenv:lint]
description = Run linter
base =
basepython = py313
skip_install = True
dependency_groups =
    lint
commands =
    ruff check can doc examples
    pylint \
        can/**.py \
        can/io \
        doc/conf.py \
        examples/**.py \
        can/interfaces/socketcan

[testenv:format]
description = Check formatting
base =
skip_install = True
dependency_groups =
    lint
commands =
    black --check .

[testenv:type]
description= Test type annotations
base =
basepython = py313
dependency_groups =
    lint
commands= 
    mypy --python-version 3.9 .
    mypy --python-version 3.10 .
    mypy --python-version 3.11 .
    mypy --python-version 3.12 .
    mypy --python-version 3.13 .

[testenv:docs]
description = Build and test the documentation
base =
basepython = py313
dependency_groups =
    docs
extras =
    canalystii
    gs-usb
    mf4
    remote
    serial
commands =
    python -m sphinx -b html    -Wan --keep-going doc build
    python -m sphinx -b doctest -W   --keep-going doc build


[pytest]
testpaths = test
addopts = -v --timeout=300 --cov=can --cov-config=tox.ini --cov-report=lcov


[coverage:run]
# we could also use branch coverage
branch = False

[coverage:report]
# two digits after decimal point
precision = 3
show_missing = True
exclude_lines =
    # Have to re-enable the standard pragma, see https://coverage.readthedocs.io/en/coverage-4.5.1a/config.html#syntax
    pragma: no cover

    # Don't complain if non-runnable code isn't run:
    if __name__ == .__main__.:

    # Don't complain if tests don't hit defensive assertion code:
    raise NotImplementedError
